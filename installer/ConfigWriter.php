<?php

declare(strict_types=1);

namespace Installer;

/**
 * ConfigWriter - Schreibt Konfigurationsdateien
 * 
 * @author 2Brands Media GmbH
 */
class ConfigWriter
{
    /**
     * Schreibt die .env Datei
     */
    public function writeEnvFile(array $dbConfig, array $appConfig): void
    {
        $envPath = __DIR__ . '/../.env';
        
        // Sicherheits-Keys generieren
        $appKey = $this->generateRandomKey(32);
        $jwtSecret = $this->generateRandomKey(64);
        
        // .env Inhalt erstellen
        $envContent = $this->generateEnvContent($dbConfig, $appConfig, $appKey, $jwtSecret);
        
        // Datei schreiben
        if (file_put_contents($envPath, $envContent) === false) {
            throw new \Exception('Konnte .env Datei nicht schreiben. Bitte Schreibrechte prüfen.');
        }
        
        // Dateiberechtigungen setzen (nur Leserechte für Owner)
        @chmod($envPath, 0400);
    }
    
    /**
     * Generiert den .env Datei-Inhalt
     */
    private function generateEnvContent(array $db, array $app, string $appKey, string $jwtSecret): string
    {
        $env = <<<ENV
# Metropol Portal Environment Configuration
# Generated at: {$this->getCurrentDateTime()}
# DO NOT COMMIT THIS FILE TO VERSION CONTROL

# Application
APP_NAME="{$app['site_name']}"
APP_ENV=production
APP_KEY={$appKey}
APP_DEBUG=false
APP_URL=
APP_TIMEZONE={$app['timezone']}

# Database
DB_CONNECTION=mysql
DB_HOST={$db['host']}
DB_PORT={$db['port']}
DB_DATABASE={$db['name']}
DB_USERNAME={$db['user']}
DB_PASSWORD={$db['pass']}

# Cache
CACHE_DRIVER=file
SESSION_DRIVER=database
SESSION_LIFETIME=120

# Security
JWT_SECRET={$jwtSecret}
CSRF_TOKEN_LIFETIME=3600

# API Keys
GOOGLE_MAPS_API_KEY={$app['google_maps_key']}
ORS_API_KEY={$app['ors_api_key']}

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
API_RATE_LIMIT_PER_MINUTE=30

# Locale
DEFAULT_LOCALE=de
FALLBACK_LOCALE=de
AVAILABLE_LOCALES=de,en,tr

# Logging
LOG_CHANNEL=daily
LOG_LEVEL=error

# Mail (configure as needed)
MAIL_MAILER=smtp
MAIL_HOST=
MAIL_PORT=587
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=noreply@example.com
MAIL_FROM_NAME="{$app['site_name']}"

# Queue
QUEUE_CONNECTION=sync

# Installation
APP_INSTALLED=true
INSTALLED_AT={$this->getCurrentDateTime()}

ENV;

        return $env;
    }
    
    /**
     * Generiert einen zufälligen Schlüssel
     */
    private function generateRandomKey(int $length): string
    {
        return bin2hex(random_bytes($length));
    }
    
    /**
     * Gibt das aktuelle Datum/Zeit zurück
     */
    private function getCurrentDateTime(): string
    {
        return date('Y-m-d H:i:s');
    }
    
    /**
     * Schreibt die config.php Datei (falls benötigt)
     */
    public function writeConfigFile(array $dbConfig, array $appConfig): void
    {
        $configPath = __DIR__ . '/../config/config.php';
        
        // Nur schreiben wenn config Verzeichnis existiert
        if (!is_dir(dirname($configPath))) {
            return;
        }
        
        $config = [
            'database' => [
                'host' => $dbConfig['host'],
                'port' => $dbConfig['port'],
                'name' => $dbConfig['name'],
                'user' => $dbConfig['user'],
                'password' => $dbConfig['pass'],
                'charset' => 'utf8mb4',
                'collation' => 'utf8mb4_unicode_ci'
            ],
            'app' => [
                'name' => $appConfig['site_name'],
                'env' => 'production',
                'debug' => false,
                'url' => $_SERVER['HTTP_HOST'] ?? 'localhost',
                'timezone' => $appConfig['timezone'],
                'locale' => 'de'
            ],
            'api' => [
                'google_maps_key' => $appConfig['google_maps_key'],
                'ors_api_key' => $appConfig['ors_api_key']
            ]
        ];
        
        $configContent = "<?php\n\n";
        $configContent .= "// Automatisch generiert am " . $this->getCurrentDateTime() . "\n\n";
        $configContent .= "return " . var_export($config, true) . ";\n";
        
        file_put_contents($configPath, $configContent);
    }
    
    /**
     * Erstellt die .htaccess Datei für Sicherheit
     */
    public function writeHtaccess(): void
    {
        $htaccessPath = __DIR__ . '/../.htaccess';
        
        $htaccess = <<<HTACCESS
# Metropol Portal Security Configuration
# Generated by Installer

# Rewrite Engine
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Redirect to public folder
    RewriteCond %{REQUEST_URI} !^/public/
    RewriteRule ^(.*)$ /public/$1 [L]
    
    # Protect sensitive files
    RewriteRule ^\.env$ - [F,L]
    RewriteRule ^composer\.(json|lock)$ - [F,L]
    RewriteRule ^package\.(json|lock)$ - [F,L]
    RewriteRule ^\.git/ - [F,L]
</IfModule>

# Disable directory browsing
Options -Indexes

# Protect files
<FilesMatch "^\.">
    Order allow,deny
    Deny from all
</FilesMatch>

# Security Headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set X-XSS-Protection "1; mode=block"
</IfModule>

# PHP Settings (if allowed)
<IfModule mod_php.c>
    php_value upload_max_filesize 10M
    php_value post_max_size 10M
    php_value max_execution_time 60
    php_value memory_limit 128M
</IfModule>

HTACCESS;

        file_put_contents($htaccessPath, $htaccess);
        
        // Auch .htaccess für public erstellen
        $publicHtaccess = __DIR__ . '/../public/.htaccess';
        $publicContent = <<<HTACCESS
# Public Directory Configuration

<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Handle Front Controller
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^ index.php [L]
</IfModule>

# Compress text files
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
</IfModule>

# Cache static assets
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"
</IfModule>

HTACCESS;

        file_put_contents($publicHtaccess, $publicContent);
    }
    
    /**
     * Prüft ob eine .env Datei bereits existiert
     */
    public static function envExists(): bool
    {
        return file_exists(__DIR__ . '/../.env');
    }
    
    /**
     * Löscht temporäre Installer-Dateien
     */
    public function cleanup(): void
    {
        // Session-Daten löschen
        if (isset($_SESSION['installer_step'])) unset($_SESSION['installer_step']);
        if (isset($_SESSION['installer_lang'])) unset($_SESSION['installer_lang']);
        if (isset($_SESSION['installer_db'])) unset($_SESSION['installer_db']);
        if (isset($_SESSION['installer_admin'])) unset($_SESSION['installer_admin']);
        if (isset($_SESSION['installer_config'])) unset($_SESSION['installer_config']);
        if (isset($_SESSION['installer_errors'])) unset($_SESSION['installer_errors']);
        if (isset($_SESSION['installer_csrf_token'])) unset($_SESSION['installer_csrf_token']);
    }
}