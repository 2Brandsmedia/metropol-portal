name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Nightly tests um 2 Uhr
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
        total: [4]
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql
        coverage: none
    
    - name: Start PHP Server
      run: |
        php -S localhost:8080 -t public &
        sleep 5
    
    - name: Run Playwright tests
      run: npx playwright test --shard=${{ matrix.shard }}/${{ matrix.total }}
      env:
        BASE_URL: http://localhost:8080
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-shard-${{ matrix.shard }}-of-${{ matrix.total }}
        path: playwright-report/
        retention-days: 30
    
    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos-shard-${{ matrix.shard }}-of-${{ matrix.total }}
        path: test-results/
        retention-days: 7

  performance:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install -g lighthouse
    
    - name: Install Playwright Browsers
      run: npx playwright install chromium
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
    
    - name: Start PHP Server
      run: |
        php -S localhost:8080 -t public &
        sleep 5
    
    - name: Run Performance tests
      run: npm run test:perf
    
    - name: Run Lighthouse CI
      run: |
        lighthouse http://localhost:8080 \
          --output=json \
          --output-path=./lighthouse-report.json \
          --chrome-flags="--headless"
    
    - name: Upload Lighthouse report
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-report
        path: lighthouse-report.json

  accessibility:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install -D axe-playwright
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
    
    - name: Start PHP Server
      run: |
        php -S localhost:8080 -t public &
        sleep 5
    
    - name: Run Accessibility tests
      run: npx playwright test tests/performance/accessibility.spec.ts
    
    - name: Upload a11y results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: test-results/

  merge-reports:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download reports
      uses: actions/download-artifact@v4
      with:
        pattern: playwright-report-*
        path: playwright-reports
    
    - name: Merge reports
      run: npx playwright merge-reports --reporter html ./playwright-reports
    
    - name: Upload merged report
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const resultsPath = './test-results.json';
          
          if (fs.existsSync(resultsPath)) {
            const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
            const { passed, failed, skipped } = results.stats;
            
            const comment = `## üé≠ Playwright Test Results
            
            ‚úÖ **Passed:** ${passed}
            ‚ùå **Failed:** ${failed}
            ‚è≠Ô∏è **Skipped:** ${skipped}
            
            [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }